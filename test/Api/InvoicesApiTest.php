<?php
/**
 * InvoicesApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  Lago\LagoPhpClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Lago API documentation
 *
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 1.31.0
 * Contact: tech@getlago.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Lago\LagoPhpClient\Test\Api;

use \Lago\LagoPhpClient\Configuration;
use \Lago\LagoPhpClient\ApiException;
use \Lago\LagoPhpClient\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * InvoicesApiTest Class Doc Comment
 *
 * @category Class
 * @package  Lago\LagoPhpClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class InvoicesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createInvoice
     *
     * Create a one-off invoice.
     *
     */
    public function testCreateInvoice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for downloadInvoice
     *
     * Download an invoice PDF.
     *
     */
    public function testDownloadInvoice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for finalizeInvoice
     *
     * Finalize a draft invoice.
     *
     */
    public function testFinalizeInvoice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findAllInvoices
     *
     * List all invoices.
     *
     */
    public function testFindAllInvoices()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findInvoice
     *
     * Retrieve an invoice.
     *
     */
    public function testFindInvoice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for invoicePaymentUrl
     *
     * Generate a payment URL.
     *
     */
    public function testInvoicePaymentUrl()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for invoicePreview
     *
     * Create an invoice preview.
     *
     */
    public function testInvoicePreview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for loseDisputeInvoice
     *
     * Mark an invoice payment dispute as lost.
     *
     */
    public function testLoseDisputeInvoice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for refreshInvoice
     *
     * Refresh a draft invoice.
     *
     */
    public function testRefreshInvoice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for retryInvoice
     *
     * Retry generation of a failed invoice.
     *
     */
    public function testRetryInvoice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for retryPayment
     *
     * Retry an invoice payment.
     *
     */
    public function testRetryPayment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateInvoice
     *
     * Update an invoice.
     *
     */
    public function testUpdateInvoice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for voidInvoice
     *
     * Void an invoice.
     *
     */
    public function testVoidInvoice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
