<?php
/**
 * DefaultApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  Lago\LagoPhpClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Lago API documentation
 *
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 1.31.0
 * Contact: tech@getlago.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Lago\LagoPhpClient\Test\Api;

use \Lago\LagoPhpClient\Configuration;
use \Lago\LagoPhpClient\ApiException;
use \Lago\LagoPhpClient\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * DefaultApiTest Class Doc Comment
 *
 * @category Class
 * @package  Lago\LagoPhpClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DefaultApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for alertTriggered
     *
     * A new alert was triggered.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for creditNoteCreated
     *
     * A new credit note has been created.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for creditNoteGenerated
     *
     * A new credit note PDF has been generated.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for creditNoteProviderRefundFailure
     *
     * The refund of a credit note has failed on a payment provider.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerAccountingProviderCreated
     *
     * A customer was created on an accouting integration.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerAccountingProviderError
     *
     * An error was encountered while syncing a customer to an accounting provider.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerCheckoutUrlGenerated
     *
     * A checkout URL was generated for a customer.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerCreated
     *
     * A new customer has been created.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerCrmProviderCreated
     *
     * A customer has been created in the CRM provider.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerCrmProviderError
     *
     * An error was encountered while syncing a customer to a CRM provider.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerPaymentProviderCreated
     *
     * A customer has been created on a payment provider.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerPaymentProviderError
     *
     * An error was encountered while syncing a customer to a payment provider.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerTaxProviderError
     *
     * An error was encountered while fetching taxes for a customer on a tax provider.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerUpdated
     *
     * A customer has been updated.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerViesCheck
     *
     * VIES VAT number has been checked for a customer.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for eventError
     *
     * An error has been detected on an event.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for eventsErrors
     *
     * Errors were encountered while post-processing some events.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for feeCreated
     *
     * A pay in advance fee has been created.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for feeTaxProviderError
     *
     * An error was encountered while fetching taxes for a fee on a tax provider.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for integrationProviderError
     *
     * An error was encountered while processing data on an integration.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for invoiceAddOnAdded
     *
     * A new add on invoice has been emitted.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for invoiceCreated
     *
     * A new invoice has been emitted.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for invoiceDrafted
     *
     * A new draft invoice has been emitted.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for invoiceGenerated
     *
     * A new invoice PDF has been generated.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for invoiceOneOffCreated
     *
     * A new one off invoice has been emitted.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for invoicePaidCreditAdded
     *
     * A new prepaid credit invoice has been emitted.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for invoicePaymentDisputeLost
     *
     * A payment dispute has been lost for an invoice payment.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for invoicePaymentFailure
     *
     * A payment attempt for an invoice has failed on a payment provider.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for invoicePaymentOverdue
     *
     * An invoice payment is overdue.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for invoicePaymentStatusUpdated
     *
     * The payment status of an invoice has been updated.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for invoiceResynced
     *
     * An invoice has been resynced with salesforce.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for invoiceVoided
     *
     * An invoice has been voided.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for paymentProviderError
     *
     * An error was raised by a payment provider.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for paymentRequestCreated
     *
     * An new payment request has been created.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for paymentRequestPaymentFailure
     *
     * A payment attempt for a payment request has failed on a payment provider.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for paymentRequestPaymentStatusUpdated
     *
     * The payment status of an invoice has been updated.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for paymentRequiresAction
     *
     * An action is required to process a payment.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for planCreated
     *
     * A new plan has been created.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for planDeleted
     *
     * A plan has been deleted.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for planUpdated
     *
     * A plan has been updated.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for subscriptionStarted
     *
     * An subscription has started.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for subscriptionTerminated
     *
     * A subscription has been terminated.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for subscriptionTerminationAlert
     *
     * A subscription will be terminated in the future.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for subscriptionTrialEnded
     *
     * A subscription trial period has ended.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for subscriptionUsageThresholdReached
     *
     * A usage threshold has been reached by a subscription.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for walletDepletedOngoingBalance
     *
     * The balance of a wallet has been depleted.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for walletTransactionCreated
     *
     * A new wallet transaction has been created.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for walletTransactionPaymentFailure
     *
     * A payment attempt for a wallet transaction has failed on a payment provider.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for walletTransactionUpdated
     *
     * A wallet transaction has been updated.
     *
     */
    public function test()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
