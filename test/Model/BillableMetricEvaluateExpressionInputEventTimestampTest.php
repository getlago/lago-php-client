<?php
/**
 * BillableMetricEvaluateExpressionInputEventTimestampTest
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  Lago\LagoPhpClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Lago API documentation
 *
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 1.31.0
 * Contact: tech@getlago.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Lago\LagoPhpClient\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * BillableMetricEvaluateExpressionInputEventTimestampTest Class Doc Comment
 *
 * @category    Class
 * @description This field captures the Unix timestamp in seconds indicating the occurrence of the event in Coordinated Universal Time (UTC). If this timestamp is not provided, the API will automatically set it to the time of event reception.
 * @package     Lago\LagoPhpClient
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class BillableMetricEvaluateExpressionInputEventTimestampTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "BillableMetricEvaluateExpressionInputEventTimestamp"
     */
    public function testBillableMetricEvaluateExpressionInputEventTimestamp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
